from telegram import ReplyKeyboardMarkup, Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import qrcode
from io import BytesIO

TOKEN = "8449746552:AAGEgAhr7fJE-Scqijs4tovIpqo-vQtRGzQ"          # ‚Üê BotFather —Ç–æ–∫–µ–Ω–æ–æ —Ç–∞–≤–∏–Ω–∞
BTC_ADDRESS = "bc1qhs90rgayvff7h50fcmwmlkgk9sdxq58m6pzthd" # ‚Üê BTC —Ö–∞—è–≥–∞–∞ —Ç–∞–≤–∏–Ω–∞

PRICES = {
    "–î–∞–≤—Å 1 ‚Äì 600,000‚ÇÆ": 600000,
    "–î–∞–≤—Å 2 ‚Äì 900,000‚ÇÆ": 900000,
    "–î–∞–≤—Å 3 ‚Äì 1,200,000‚ÇÆ": 1200000,
}

def start(update: Update, context: CallbackContext):
    kb = [["–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä"]]
    update.message.reply_text("–•–æ—Ç —Å–æ–Ω–≥–æ–Ω–æ —É—É üëá",
        reply_markup=ReplyKeyboardMarkup(kb, one_time_keyboard=True))

def handle_city(update: Update, context: CallbackContext):
    context.user_data["city"] = update.message.text
    kb = [[k] for k in PRICES.keys()]
    update.message.reply_text("–ë–∞—Ä–∞–∞–≥–∞–∞ —Å–æ–Ω–≥–æ–Ω–æ —É—É üëá",
        reply_markup=ReplyKeyboardMarkup(kb, one_time_keyboard=True))

def show_payment(update: Update, context: CallbackContext):
    choice = update.message.text
    if choice not in PRICES:
        update.message.reply_text("–ë—É—Ä—É—É —Å–æ–Ω–≥–æ–ª—Ç. /start –≥—ç–∂ —ç—Ö–ª“Ø“Ø–ª–Ω—ç “Ø“Ø.")
        return
    amt = PRICES[choice]
    city = context.user_data.get("city", "–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä")
    msg = (f"–ó–∞—Ö–∏–∞–ª–≥–∞ –±–∞—Ç–∞–ª–≥–∞–∞–∂–ª–∞–∞ ‚úÖ\n–•–æ—Ç: {city}\n–ë–∞—Ä–∞–∞: {choice}\n"
           f"–ù–∏–π—Ç “Ø–Ω—ç: {amt:,}‚ÇÆ\n\nüí≥ BTC —Ö–∞—è–≥:\n{BTC_ADDRESS}\n\n"
           "–¢”©–ª–±”©—Ä —Ö–∏–π—Å–Ω–∏–π –¥–∞—Ä–∞–∞ /paid –≥—ç–∂ –±–∏—á—ç—ç—Ä—ç–π.")
    update.message.reply_text(msg)
    # QR
    img = qrcode.make(BTC_ADDRESS)
    bio = BytesIO(); bio.name = "btc.png"; img.save(bio, "PNG"); bio.seek(0)
    update.message.reply_photo(photo=bio, caption="BTC address QR")

def repeat_pay(update: Update, context: CallbackContext):
    update.message.reply_text(f"BTC: {BTC_ADDRESS}")

def paid(update: Update, context: CallbackContext):
    update.message.reply_text("–ë–∞—è—Ä–ª–∞–ª–∞–∞! –¢”©–ª–±”©—Ä —à–∞–ª–≥–∞–∂ –±–∞–π–Ω–∞. üëå")

def main():
    up = Updater(TOKEN, use_context=True)
    dp = up.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("pay", repeat_pay))
    dp.add_handler(CommandHandler("paid", paid))
    dp.add_handler(MessageHandler(Filters.regex("^–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä$"), handle_city))
    product_regex = "^(" + "|".join(map(lambda s: s.replace("(", r"\(").replace(")", r"\)"), PRICES.keys())) + ")$"
    dp.add_handler(MessageHandler(Filters.regex(product_regex), show_payment))
    up.start_polling()
    up.idle()

if __name__ == "__main__":
    main()
